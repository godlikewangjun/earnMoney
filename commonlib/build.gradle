apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        resConfigs "zh"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'common_rules.pro', 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'common_rules.pro', 'proguard-rules.pro'
        }
    }
    allprojects {
        repositories {
            flatDir { dirs 'libs' }
        }
    }
    lintOptions {
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    //指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}
////下面的jarPackage和afterEvaluate负责让这个aar再生成一个输出jar包的任务
//def jarPackage(buildType) {
//    return tasks.create("jar${buildType.capitalize()}Package", Copy) {
//        def aarFile = file(project.buildDir.path + "/outputs/aar/${project.name}-${buildType}.aar")
//        def outputDir = file(project.buildDir.path + "/outputs/jar")
//
//        from zipTree(aarFile)
//        into outputDir
//        include 'classes.jar'
//        rename 'classes.jar', "${project.name}-${buildType}.jar"
//        group = 'build'
//        description = '生成jar包'
//    }.dependsOn(project.getTasksByName("assemble${buildType.capitalize()}", false).first())
//}
////加入任务
//afterEvaluate {
//    android {
//        buildTypes.findAll().each { buildType ->
//            def buildTypeName = buildType.getName()
//            jarPackage(buildTypeName)
//        }
//    }
//}

dependencies {
    api fileTree(include: ['*.jar','*.aar'], dir: 'libs')
//    api('com.wj.libs:ktlibrary:1.1.27', {
//        exclude group: 'com.wj.libs', module: 'wjEventBus'
//    })
    api 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.viewpager2:viewpager2:1.0.0'
    api 'com.github.godlikewangjun.Wjktlib:ktlibrary:1.6.9.5'
    api 'com.github.godlikewangjun:WjEventBus:2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    implementation 'top.zibin:Luban:1.1.8'//图片压缩
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    api 'com.airbnb.android:lottie:3.5.0'
    //友盟
    //基础组件库依赖(必须) Push 6.2.0版本必须升级新版本Common SDK
    api 'com.umeng.umsdk:common:9.3.0'
    implementation  'com.umeng.umsdk:asms:1.1.3'
    implementation 'com.umeng.umsdk:crash:0.0.5'

    //友盟push相关依赖(必须)
    api 'com.umeng.umsdk:push:6.2.0'

    implementation 'com.umeng.umsdk:alicloud-httpdns:1.2.5'
    implementation 'com.umeng.umsdk:alicloud-utils:1.1.5'
    implementation 'com.umeng.umsdk:alicloud_beacon:1.0.1'

    implementation 'com.umeng.umsdk:agoo-accs:3.3.9.7-open'
    implementation 'com.umeng.umsdk:agoo_networksdk:3.5.5'
    implementation 'com.umeng.umsdk:agoo_tlog:3.0.0.17'
    implementation 'com.umeng.umsdk:agoo_tnet4android:3.1.14.9'

    api 'com.umeng.umsdk:huawei-basetb:2.6.3.306'
    api 'com.umeng.umsdk:huawei-pushtb:2.6.3.306'
    api 'com.umeng.umsdk:huawei-umengaccs:1.2.4'

    api 'com.umeng.umsdk:meizu-push:3.8.7'
    api 'com.umeng.umsdk:meizu-umengaccs:1.1.1'

    api 'com.umeng.umsdk:oppo-push:2.0.2'
    api 'com.umeng.umsdk:oppo-umengaccs:1.0.6'

    api 'com.umeng.umsdk:vivo-push:2.3.5'
    api 'com.umeng.umsdk:vivo-umengaccs:1.1.0'

    api 'com.umeng.umsdk:xiaomi-push:3.7.0'
    api 'com.umeng.umsdk:xiaomi-umengaccs:1.1.4'

    api project(':umshare')
    implementation 'com.liulishuo.filedownloader:library:1.7.7'//闲玩需要用
    //模拟器检查
    api 'com.lahm.library:easy-protector-release:1.1.1'
    api 'com.sunfusheng:MarqueeView:1.4.1'
    /**刷新*/
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.2'//没有使用特殊Header，可以不加这行
    api 'com.github.LuckSiege.PictureSelector:picture_library:v2.4.6'//图片选择
    /**指示dialog*/
    api 'com.github.xujiaji:happy-bubble:1.2.0'

    api 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0'
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0"
    api 'androidx.activity:activity-ktx:1.2.0'
    api "androidx.fragment:fragment-ktx:1.3.0"
//    api "androidx.work:work-runtime-ktx:2.5.0"

    /**腾讯bugly升级*/
    api 'com.tencent.bugly:crashreport_upgrade:1.5.0'
    api 'com.tencent.bugly:nativecrashreport:latest.release'
}
